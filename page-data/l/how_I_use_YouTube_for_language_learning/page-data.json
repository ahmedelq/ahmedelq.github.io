{"componentChunkName":"component---src-templates-post-js","path":"/l/how_I_use_YouTube_for_language_learning/","result":{"data":{"mdx":{"id":"66cfcdd5-72e6-5235-8764-819fc5d57110","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"layout\": \"post\",\n  \"title\": \"How I use YouTube for language learning\",\n  \"author\": \"Ahmed Alq\",\n  \"tags\": [\"l\"],\n  \"comments\": true,\n  \"date\": \"2021-12-04T00:00:00.000Z\",\n  \"sub\": \"l\",\n  \"lang\": false\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"YouTube is a rich resource to get an interesting comprehensible input (CI). \"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://twitter.com/ahmelq/status/1463908074071236611\"\n  }, \"My language learning method\"), \" consists mainly of two parts:\\na) Getting massive amounts of input (mostly comprehensible).\\nb) Memorizing vocabulary using flashcards & analyzing grammar \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Just-in-time_learning\"\n  }, \"JIT\"), \". \"), mdx(\"p\", null, \"YouTube is one of the integral parts of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"a\"), \", but what about \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"b\"), \"? This is what this post is about. \"), mdx(\"p\", null, \"Now, I can manually make flashcards about sentences that I like, but what If I wanted everything out of a video? It will be tedious to make flashcards. \"), mdx(\"p\", null, \"This is an example of a flashcard we're gonna be automatically making: \"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://i.imgur.com/98Imu0m.png\",\n    \"alt\": \"img\"\n  })), mdx(\"p\", null, \"First you have to install:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/yt-dlp/yt-dlp\"\n  }, \"yt-dlp\"), \":  a tool to download YT videos and captions.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://apps.ankiweb.net/\"\n  }, \"Anki\"), \": A flashcard software (\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Spaced_repetition\"\n  }, \"spaced-repetition\"), \" system).\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ankiweb.net/shared/info/939347702\"\n  }, \"WFLM\"), \": an anki add-on that automatically segments videos and captions to make flashcards . \"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"You want to search for a video that has manually generated captions in the TL, to help, select \\\"Subtitles/CC\\\" under \\\"FILTERS --> Features\\\".\"))), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://i.imgur.com/zVEvCLD.png\",\n    \"alt\": \"img\"\n  })), mdx(\"p\", null, \"Let's use \\\"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.youtube.com/watch?v=VvS4-92ZP6Y\"\n  }, \"Die Kleine Raupe Nimmersatt\"), \"\\\" video for for demonstration:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Download the video + captions using yt-dlp: \"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"yt-dlp https://youtu.be/VvS4-92ZP6Y -f mp4 --write-subs --sub-langs \\\"de,en\\\"\\n\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Where \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"de\"), \" refers to the video's TL, (change it \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\"\n  }, \"accordingly\"), \" to your TL). \"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"In this case, the video doesn't contain manually generated English captions :(. So I had to use YT automatically generated captions, which are crappy:    \")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"  yt-dlp https://youtu.be/VvS4-92ZP6Y -f mp4 --write-auto-subs --sub-langs \\\"en\\\"\\n\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"  $ ls -sh1\\ntotal 26M\\n4.0K 'Die Kleine Raupe Nimmersatt [VvS4-92ZP6Y].de.vtt'\\n 16K 'Die Kleine Raupe Nimmersatt [VvS4-92ZP6Y].en.vtt'\\n 26M 'Die Kleine Raupe Nimmersatt [VvS4-92ZP6Y].mp4'\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"In Anki, press \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Ctrl+M\"), \" to launch WFLM add-on, fill in the form. I chose the audio-model, do what suits you best:\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://i.imgur.com/ow6U9ri.png\",\n    \"alt\": \"img\"\n  }), \" \")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Flashcards are ready, the audio is synced perfectly but the English translation is crappy, I can edit the translation by pressing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"e\"), \" .\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://i.imgur.com/HqbdJsm.png\",\n    \"alt\": \"img\"\n  })), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://i.imgur.com/5hYiBNP.png\",\n    \"alt\": \"img\"\n  }))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Encountered boring/easy flashcard?  \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Ctrl+del\"), \" to delete.\"))), mdx(\"p\", null, \"It can be tempting to rely solely on flashcards for acquisition, but they're not sufficient to acquire a language. You primarily need massive amounts of CI for that. And indeed rote memorization has many flaws; but it boosts the acquisition process significantly. \"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"How I use YouTube for language learning","date":"December 4th, 2021","isoDate":"2021-12-04","sub":"l","lang":false},"fields":{"slug":"/l/how_I_use_YouTube_for_language_learning/","readingTime":{"minutes":1.91,"text":"2 min read"}}}},"pageContext":{"id":"66cfcdd5-72e6-5235-8764-819fc5d57110"}},"staticQueryHashes":["2841359383"]}