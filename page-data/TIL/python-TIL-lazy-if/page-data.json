{"componentChunkName":"component---src-templates-post-js","path":"/TIL/python-TIL-lazy-if/","result":{"data":{"mdx":{"id":"9fe46bd2-3475-5385-8256-4f9db9c2277f","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"layout\": \"post\",\n  \"title\": \"if statement lazy evaluation in python\",\n  \"author\": \"Ahmed Alq\",\n  \"tags\": [\"python\"],\n  \"comments\": true,\n  \"date\": \"2020-06-01T00:00:00.000Z\",\n  \"sub\": \"TIL\",\n  \"lang\": false\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This is pretty straight-forward and self-explanatory:\"), mdx(\"h2\", {\n    \"id\": \"short-circuit\"\n  }, \"Short-circuit\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#short-circuit\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\"\n  }, mdx(\"svg\", {\n    parentName: \"span\",\n    \"className\": \"anchor\",\n    \"height\": \"20\",\n    \"width\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"aria-hidden\": true\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fill\": \"#666\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \">>> empty_dict = {}\\n>>> if empty_dict and empty_dict['key']:\\n        # No KeyError, since the second expression will not be evaluated.\\n        pass\\n\")), mdx(\"p\", null, \"This applies to any() and all() as well.\"), mdx(\"h2\", {\n    \"id\": \"eager-evaluation\"\n  }, \"\\\"Eager\\\" evaluation\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#eager-evaluation\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\"\n  }, mdx(\"svg\", {\n    parentName: \"span\",\n    \"className\": \"anchor\",\n    \"height\": \"20\",\n    \"width\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"aria-hidden\": true\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fill\": \"#666\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"p\", null, \"These actually are used for bitwise operation, but can achieve the desired results.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \">>> if empty_dict & empty_dict['key']:\\n    pass\\n\\nTraceback (most recent call last):\\nFile \\\"<stdin>\\\", line 1, in <module>\\nKeyError: 'key'\\n\")), mdx(\"h2\", {\n    \"id\": \"further-reading\"\n  }, \"Further reading\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#further-reading\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\"\n  }, mdx(\"svg\", {\n    parentName: \"span\",\n    \"className\": \"anchor\",\n    \"height\": \"20\",\n    \"width\": \"20\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"aria-hidden\": true\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fill\": \"#666\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://en.wikipedia.org/wiki/Short-circuit_evaluation\"\n  }, \"Short-circuit evaluation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.python.org/3/reference/expressions.html#binary-bitwise-operations\"\n  }, \"Official docs\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"if statement lazy evaluation in python","date":"June 1st, 2020","isoDate":"2020-06-01","sub":"TIL","lang":false},"fields":{"slug":"/TIL/python-TIL-lazy-if/","readingTime":{"minutes":0.545,"text":"1 min read"}}}},"pageContext":{"id":"9fe46bd2-3475-5385-8256-4f9db9c2277f"}},"staticQueryHashes":["2841359383"]}